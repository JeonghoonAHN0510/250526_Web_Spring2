[ Builder Pattern ]
- Lombok 라이브러리에서 제공하는 빌더 패턴
- 복잡한 객체 생성을 간단하고 직관적으로 표현하기 위해서 사용
- 장점
    1) 순서 규칙이 없어서 매개변수가 많을 때, 유용하다.
    2) 필요한 매개변수만 선택적으로 초기화할 수 있다.
- 주요 메소드
    1) .builder() : 빌더 객체의 시작
    2) .build()   : 빌더 객체의 끝
    3) .속성명( 속성값 ) : 지정한 속성명의 속성값 대입
- 사용법
    1) 빌더 패턴을 사용할 클래스 위에 @Builder, @NoArgsConstructor, @AllArgsConstructor 어노테이션 추가
    2) 클래스명 변수명 = 클래스명.builder().속성명( 속성값 ).build();

[ static ]
- 정적 변수/메소드를 만들 때 사용
- 객체 없이 사용할 수 있게 만들어주는 것
-> '객체명.메소드'가 아니라 '클래스명.메소드'