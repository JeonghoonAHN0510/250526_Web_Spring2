- RAM(메모리) : 주기억장치이면서 휘발성 메모리, 종료하면 사라짐
- ROM(SSD/HDD) : 보조기억장치이면서 비휘발성 메모리, 종료해도 사라지지 않음
-> 주기억장치는 보조기억장치에 비해 용량이 작고, 속도가 빠르다.

[ 개발 주요 저장 ]
- 저장하려는 데이터의 사용처를 생각하고 저장
- 저장소
    1) 웹브라우저 로컬/세션 스토리지 : 클라이언트 환경에 저장, 보안에 취약, 주로 설정 정보 등을 저장
    2) DB : DB 서버에 영구적으로 저장
    3) 톰캣 세션 : 자바 서버에 저장, 서버에 과부하 유발 가능, 보안에 안전, 주로 로그인 상태 등을 저장
    4) Redis : 메모리에 임시 저장(캐싱), 주로 다중 서버에서 사용, 주로 DB조회 결과/실시간 정보 등을 저장

[ Redis ]
- 인메모리 기반의 데이터 저장소
- 관계형 DB(보조기억장치)는 비교적 속도가 느려서, 빠른 데이터 처리가 필요할 때 사용
    -> MySQL/ORACLE : SQL
    -> Redis : NOSQL(객체지향)
- 구조 : key-value(Map, JSON, dto 구조와 비슷)
- 캐싱 : SELECT할 때마다 데이터베이스의 접근/요청하면 성능이 저하되므로 한 번 SELECT한 결과를 임시 저장하는 것
- 서버가 꺼지면 저장된 모든 정보는 사라진다.
- Port번호 : 6379
- 설치방법
    방법1) 비설치형 : Spring 내장 Redis 인메모리
    방법2) 설치형 : Redis 자체 설치
    0. 공식 홈페이지 : https://redis.io/ko/
    1. 윈도우/로컬 환경 : https://github.com/redis-windows/redis-windows/releases?utm_source=chatgpt.com
        -> 옵션 선택1 : Redis-8.2.2-Windows-x64-msys2-with-Service.zip      백그라운드 실행
        -> 옵션 선택2 : Redis-8.2.2-Windows-x64-msys2.zip                   직접 실행(강의 기준)
    2. redis-server.exe 관리자권한 실행
    3. CMD 켜진 상태 = 서버가 켜진 상태
- Spring과 Redis 연동
    1. build.gradle에 'Spring Data Redis' 의존성 주입
    2. application.properties 서버 연동
        spring.data.redis.host=localhost
        spring.data.redis.port=6379