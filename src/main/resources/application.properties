# .properties 파일의 주석

# [1] Spring Server Port 설정
server.port=8080

# [2] JDBC 연동 설정 -> DAO에서 했던 연동코드를 대신한다.
# [2-1] 연동할 DB서버의 주소 입력
spring.datasource.url=jdbc:mysql://localhost:3306/springweb2
# [2-2] 연동할 DB서버의 계정명 입력
spring.datasource.username=root
# [2-3] 연동할 DB서버의 비밀번호 입력 -> 띄어쓰기 주의!! 띄어쓰기도 포함된다.
spring.datasource.password=1234

# [3-1] 로그 설정
logging.level.root=debug
# level : debug < info < warn < error
# info 설정 : info < warn < error
# warn 설정 : warn < error
logging.level.example=debug

# [3-2] 로그 파일 처리 설정 : 프로젝트 이하 경로
# logging.file.name = 패키지명/파일명.log
# -> 콘솔에 찍히는 모든 로그가 파일로 저장된다.
# -> 일반적으로 git에 업로드 X
#logging.file.name=logs/app.log

# [3-3] 로그 파일 설정
# 로그 파일 최대 크기
logging.logback.rollingpolicy.max-file-size=10MB
# 로그 파일 최대 개수 -> 최대 개수 이후부터 오래된 파일 삭제
logging.logback.rollingpolicy.max-history=10

# [3-4] 프레임워크 내부 로그 줄이기(운영단계에선 warn까지만 출력)
#spring.main.log-startup-info=false
#logging.level.org.springframework.boot.web=warn
#logging.level.org.springframework.boot.web.embedded.tomcat=warn
#logging.level.org.apache.catalina=warn
#logging.level.org.apache.coyote=warn
#logging.level.org.springframework.web=warn

# [3-5] 로그 형식 설정
# %msg : 로그메시지
# %n : 줄바꿈
# %d{ y M d H m s }
# %level : 레벨, logger : 클래스/경로
logging.pattern.file=[%d{yyyy-MM-dd HH-mm-ss}] %msg %n
#logging.pattern.console=[%d{yyyy-MM-dd HH-mm-ss}] %level %logger %msg %n