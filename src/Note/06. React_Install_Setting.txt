[ React ]
- 'Meta'에서 개발한 자바스크립트 라이브러리
    -> '좋아요', '댓글쓰기'를 하면, 페이지 전환을 해야하는 불편함이 존재했음
    -> 페이지 전환이 없는 기능을 구현하기 위해서 사용
- 목적
    1. 자바스크립트에서 부족한 UI 조작과 효율성 보완
    2. 웹/앱에서 유연한 UI 제공
    3. 트렌디한 변화에 빠르게 대응
- 특징
    1. 화면(HTML)을 컴포넌트(함수) 기반으로 구성 -> 재사용이 가능하다.
    2. 가상 DOM : 가상의 HTML을 사용하여 성능을 최적화한다.
    3. 훅(Hooks) 지원 : 함수형 프로그래밍 방식으로 다양한 기능 지원
- 사용처
    1. 웹개발 : React
    2. 앱개발 : React Native
    3. 웹/앱개발 : React Native Web

[ SPA(Single Page Application) <---> MPA(Multi Page Application) ]
    -> HTML 1개로 구성(CSR 방식) vs HTML 여러개로 구성(SSR 방식)
[ SPA ]
- CSR(Client Side Rendering) : 사용자 브라우저에서 화면 전환
    -> 장점 : 속도가 빠르다, 서버 부담이 적다.
    -> 단점 : 최초 로딩이 느리다, 검색엔진에 불리하다.
    -> next.js를 사용하면, SSR을 사용할 수 있어서 단점을 보완할 수 있다.
    -> 예시 : React
[ MPA ]
- SSR(Server Side Rendering) : 서버가 제공하여, 사용자 브라우저에서 화면 전환
    -> 장점 : 필요한 데이터만 사용할 수 있다.
    -> 단점 : 새로고침이 발생한다.
    -> 예시 : JSP

[ React 환경 준비 ]
- node.js란? 크롬 엔진을 사용하여 HTML에 종속되지않고 자체적인 자바스크립트를 실행하는 라이브러리
- npm(node package manager)이란? node.js 기반의 라이브러리를 설치/관리해주는 프로그램( gradle과 비슷 )
1. node.js 접속 후 설치 - v22.19.0
2. node.js 버전 확인 - cmd에 node -v, npm -v
3. react 설치
    - 강의기준 : project -> src -> main 폴더에 설치
        1) main 폴더 우클릭 후, [통합 터미널에서 열기]