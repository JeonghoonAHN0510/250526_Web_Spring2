[ Dao ]
- 순수 JDBC 방식
- 자바에서 DB와 직접 연결하고 SQL을 실행을 담당
- 주요 인터페이스
    1. Connection
    2. PreparedStatement
    3. ResultSet

[ MyBatis ]
- JDBC보다 편리한 기능 제공, 객체를 자동으로 매핑(연결)
- 특징
    1) SQL 매핑
    2) 결과 자동 매핑
    3) 유연성
    4) Spring에서 공식 지원
- 설치 : Spring에서 의존성 추가
    -> DBMS 라이브러리도 같이 존재해야한다.
- Java와 DB 연동 설정하기 : application.properties에서 자동 연동
    1) application.properties는 resources 폴더 내에 존재한다
    2) 한글이 깨지는 경우 : 설정 -> '파일 인코딩' -> '프로퍼티에 대한 디폴트 인코딩' : uft-8
    JDBC 연동 - application.properties에서
    spring.datasource.url=jdbc:mysql://localhost:3306/DB명
    spring.datasource.username=계정명
    spring.datasource.password=비밀번호

[ MyBatis 사용법 ]
1. 인터페이스를 생성 후, @Mapper 어노테이션을 주입한다.
2. SQL DML 어노테이션을 사용한다.
    INSERT : @Insert("SQL")
    SELECT : @Select("SQL")
    DELETE : @Delete("SQL")
    UPDATE : @Update("SQL")
3. SQL 내 매개변수는 #{ 매개변수 }로 표현한다.
4. 반환타입은 SQL 결과가 자동으로 매핑된다.
    int : Insert/Update/Delete에 의해 처리된 레코드 수 반환
    Map/Dto/List : Select에 의해 조회된 레코드 반환
5. Dto의 멤버변수명과 SQL의 속성명은 일치해야한다.